import { Anomaly, AnomalyStats, User } from "@/types/anomaly";

export const mockUsers: User[] = [
  {
    id: "1",
    name: "John Operator",
    role: "operator",
    email: "john.operator@company.com",
    isActive: true,
    createdAt: new Date("2024-01-01"),
    lastLogin: new Date("2024-01-15T08:30:00"),
    department: "Operations",
  },
  {
    id: "2",
    name: "Sarah Engineer",
    role: "engineer",
    email: "sarah.engineer@company.com",
    isActive: true,
    createdAt: new Date("2024-01-02"),
    lastLogin: new Date("2024-01-15T09:15:00"),
    department: "Maintenance",
  },
  {
    id: "3",
    name: "Mike Manager",
    role: "manager",
    email: "mike.manager@company.com",
    isActive: true,
    createdAt: new Date("2024-01-03"),
    lastLogin: new Date("2024-01-15T07:45:00"),
    department: "Operations",
  },
  {
    id: "4",
    name: "Lisa Technician",
    role: "engineer",
    email: "lisa.tech@company.com",
    isActive: true,
    createdAt: new Date("2024-01-04"),
    lastLogin: new Date("2024-01-14T16:20:00"),
    department: "Maintenance",
  },
  {
    id: "5",
    name: "Admin User",
    role: "admin",
    email: "admin@company.com",
    isActive: true,
    createdAt: new Date("2024-01-01"),
    lastLogin: new Date("2024-01-15T10:00:00"),
    department: "IT Administration",
  },
  {
    id: "6",
    name: "James Safety",
    role: "manager",
    email: "james.safety@company.com",
    isActive: true,
    createdAt: new Date("2024-01-05"),
    lastLogin: new Date("2024-01-13T14:30:00"),
    department: "Safety",
  },
  {
    id: "7",
    name: "Emma Inspector",
    role: "operator",
    email: "emma.inspector@company.com",
    isActive: false,
    createdAt: new Date("2024-01-06"),
    lastLogin: new Date("2024-01-10T11:00:00"),
    department: "Operations",
  },
];

export const mockAnomalies: Anomaly[] = [
  {
    id: "1",
    title: "Cooling System Pressure Drop",
    description:
      "Noticed significant pressure drop in the main cooling system during routine inspection. Pressure readings are 15% below normal operating parameters.",
    affectedUnit: "Unit A - Cooling System",
    severityLevel: "high",
    impactCategory: "safety",
    status: "open",
    reportedBy: mockUsers[0],
    assignedTo: mockUsers[1],
    reportedAt: new Date("2024-01-15T08:30:00"),
    updatedAt: new Date("2024-01-15T09:15:00"),
    comments: [
      {
        id: "1",
        content: "Initial report filed. Requires immediate attention.",
        author: mockUsers[0],
        createdAt: new Date("2024-01-15T08:30:00"),
        type: "comment",
      },
      {
        id: "2",
        content: "Assigned to maintenance team for investigation.",
        author: mockUsers[2],
        createdAt: new Date("2024-01-15T09:15:00"),
        type: "assignment",
      },
    ],
  },
  {
    id: "2",
    title: "Conveyor Belt Irregular Noise",
    description:
      "Unusual grinding noise coming from conveyor belt motor. No visible damage observed externally.",
    affectedUnit: "Unit B - Conveyor System",
    severityLevel: "medium",
    impactCategory: "operations",
    status: "in-progress",
    reportedBy: mockUsers[0],
    assignedTo: mockUsers[3],
    reportedAt: new Date("2024-01-14T14:20:00"),
    updatedAt: new Date("2024-01-15T10:30:00"),
    comments: [
      {
        id: "3",
        content: "Scheduled for maintenance inspection tomorrow.",
        author: mockUsers[3],
        createdAt: new Date("2024-01-15T10:30:00"),
        type: "comment",
      },
    ],
    maintenanceScheduleDate: new Date("2024-01-16T10:00:00"),
  },
  {
    id: "3",
    title: "Safety Guard Misalignment",
    description:
      "Safety guard on machine #3 appears to be slightly misaligned. Could potentially interfere with emergency stop procedures.",
    affectedUnit: "Unit C - Assembly Line",
    severityLevel: "high",
    impactCategory: "safety",
    status: "resolved",
    reportedBy: mockUsers[0],
    assignedTo: mockUsers[1],
    reportedAt: new Date("2024-01-13T16:45:00"),
    updatedAt: new Date("2024-01-14T11:20:00"),
    resolvedAt: new Date("2024-01-14T11:20:00"),
    comments: [
      {
        id: "4",
        content:
          "Safety guard realigned and tested. Emergency procedures verified.",
        author: mockUsers[1],
        createdAt: new Date("2024-01-14T11:20:00"),
        type: "comment",
      },
    ],
  },
  {
    id: "4",
    title: "Ventilation System Filter Replacement",
    description:
      "Routine inspection revealed that ventilation filter needs replacement ahead of schedule due to heavy dust accumulation.",
    affectedUnit: "Unit D - Ventilation",
    severityLevel: "low",
    impactCategory: "operations",
    status: "open",
    reportedBy: mockUsers[0],
    reportedAt: new Date("2024-01-15T11:00:00"),
    updatedAt: new Date("2024-01-15T11:00:00"),
    comments: [],
  },
  {
    id: "5",
    title: "Temperature Sensor Malfunction",
    description:
      "Temperature sensor in Zone 2 is providing inconsistent readings. Manual measurements confirm the sensor is faulty.",
    affectedUnit: "Unit A - Temperature Control",
    severityLevel: "medium",
    impactCategory: "operations",
    status: "in-progress",
    reportedBy: mockUsers[0],
    assignedTo: mockUsers[1],
    reportedAt: new Date("2024-01-12T09:15:00"),
    updatedAt: new Date("2024-01-15T08:00:00"),
    comments: [
      {
        id: "5",
        content:
          "Replacement sensor ordered. Expected delivery by end of week.",
        author: mockUsers[1],
        createdAt: new Date("2024-01-15T08:00:00"),
        type: "comment",
      },
    ],
  },
];

export const mockStats: AnomalyStats = {
  total: mockAnomalies.length,
  open: mockAnomalies.filter((a) => a.status === "open").length,
  inProgress: mockAnomalies.filter((a) => a.status === "in-progress").length,
  resolved: mockAnomalies.filter((a) => a.status === "resolved").length,
  archived: mockAnomalies.filter((a) => a.status === "archived").length,
  critical: mockAnomalies.filter((a) => a.severityLevel === "high").length,
  warning: mockAnomalies.filter((a) => a.severityLevel === "medium").length,
  low: mockAnomalies.filter((a) => a.severityLevel === "low").length,
};

export const units = [
  "Unit A - Cooling System",
  "Unit A - Temperature Control",
  "Unit B - Conveyor System",
  "Unit C - Assembly Line",
  "Unit D - Ventilation",
  "Unit E - Power Distribution",
  "Unit F - Hydraulic System",
];
